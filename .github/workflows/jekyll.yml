# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Website Deployment

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    name: Build Static Site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout from Source Control
        uses: actions/checkout@v4
      - name: Install Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: '3.4.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Build Jekyll Site with Bundler
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload to Artifact Repository
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-artifact@v4
        with:
          name: compiled-site
          path: _site

  # Deployment job
  deploy:
    name: Deploy to AWS Lightsail
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout from Source Control
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: compiled-site
          path: _site
      - uses: GuillaumeFalourd/setup-rsync@v1.2
        name: Setup Rsync with SSH
        id: rsync
        with:
          ssh-private-key: ${{ secrets.LIGHTSAIL_KEY }}
          ssh-known-hosts: ${{ secrets.LIGHTSAIL_HOST }}
      - name: Publish to AWS Lightsail
        run: |
          rsync -avz _site/ ${{ secrets.LIGHTSAIL_USER }}@${{ secrets.LIGHTSAIL_HOST }}:/home/${{ secrets.LIGHTSAIL_USER }}/stack/nginx/html/
      